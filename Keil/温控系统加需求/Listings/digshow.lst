C51 COMPILER V9.59.0.0   DIGSHOW                                                           06/20/2022 22:35:56 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DIGSHOW
OBJECT MODULE PLACED IN .\Objects\digshow.obj
COMPILER INVOKED BY: E:\keli\C51\BIN\C51.EXE digshow.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\digs
                    -how.lst) TABS(2) OBJECT(.\Objects\digshow.obj)

line level    source

   1          #include <digshow.h>
   2          
   3          
   4          //void show_ds1302(uchar *time)
   5          //{
   6          //  show_num(1,0,8,num+16*2);//2
   7          //  show_num(1,0,16,num+16*0);//0
   8          //  show_num(1,0,24,num+16*(time[0]/10));//年 十位
   9          //  show_num(1,0,32,num+16*(time[0]%10));//年 个位
  10          //  
  11          //  show_num(1,0,56,num+16*(time[1]/10));//月 十位
  12          //  show_num(2,0,0,num+16*(time[1]%10));//月 个位
  13          //  
  14          //  show_num(2,0,24,num+16*(time[2]/10));//日 十位
  15          //  show_num(2,0,32,num+16*(time[2]%10));//日 个位
  16          //  
  17          //  show_num(1,2,32,num+16*(time[3]/10));//时 十位
  18          //  show_num(1,2,40,num+16*(time[3]%10));//时 个位
  19          //  
  20          //  show_num(1,2,56,num+16*(time[4]/10));//分 十位
  21          //  show_num(2,2,0,num+16*(time[4]%10));//分 个位
  22          //  
  23          //  show_num(2,2,16,num+16*(time[5]/10));//秒 十位
  24          //  show_num(2,2,24,num+16*(time[5]%10));//秒 个位
  25          //}
  26          
  27          void init_words()
  28          {
  29   1        show_ch(1,0,40,ch1+32*0); // 年
  30   1        show_ch(2,0,8,ch1+32*1); // 月
  31   1        show_ch(2,0,40,ch1+32*2); // 日
  32   1        show_num(1,2,48,num+16*14); // ：
  33   1        show_num(2,2,8,num+16*14); // ：
  34   1        show_ch(1,4,0,ch1+32*4); // 当
  35   1        show_ch(1,4,16,ch1+32*5); // 前
  36   1        show_num(1,4,56,num+16*11); // .
  37   1        show_ch(2,4,8,ch1+32*3); // ℃
  38   1        show_ch(1,6,40,ch1+32*3); // ℃
  39   1        show_ch(2,6,40,ch1+32*3); // ℃
  40   1      //  show_im(1,2,0*16,image1);
  41   1      }
  42          
  43          void init_welcom()
  44          {
  45   1        show_im(1,2,0,image1+128*1);
  46   1        show_im(1,2,32,image1+128*2);
  47   1        show_im(2,2,0,image1+128*3);
  48   1        show_im(2,2,32,image1+128*4);
  49   1      }
  50          
  51          void init_name()
  52          {
  53   1        show_ch(1,1,24,ch1+32*17); // 机电1903班
  54   1        show_ch(1,1,40,ch1+32*18);
C51 COMPILER V9.59.0.0   DIGSHOW                                                           06/20/2022 22:35:56 PAGE 2   

  55   1        show_num(1,1,56,num+16*1);
  56   1        show_num(2,1,0,num+16*9);
  57   1        show_num(2,1,8,num+16*0);
  58   1        show_num(2,1,16,num+16*3);
  59   1        show_ch(2,1,24,ch1+32*19);
  60   1        show_ch(1,3,40,ch1+32*11); // 王一博
  61   1        show_num(1,3,56,num+16*16);
  62   1        show_num(2,3,0,num+16*16);
  63   1        show_ch(2,3,8,ch1+32*13);
  64   1        show_num(1,5,16,num+16*1); // 19405010322
  65   1        show_num(1,5,24,num+16*9);
  66   1        show_num(1,5,32,num+16*4);
  67   1        show_num(1,5,40,num+16*0);
  68   1        show_num(1,5,48,num+16*5);
  69   1        show_num(1,5,56,num+16*0);
  70   1        show_num(2,5,0,num+16*1);
  71   1        show_num(2,5,8,num+16*0);
  72   1        show_num(2,5,16,num+16*3);
  73   1        show_num(2,5,24,num+16*2);
  74   1        show_num(2,5,32,num+16*2);
  75   1      }
  76          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    666    ----
   CONSTANT SIZE    =   1552    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
