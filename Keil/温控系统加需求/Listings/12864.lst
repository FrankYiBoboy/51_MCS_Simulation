C51 COMPILER V9.60.0.0   12864                                                             06/16/2022 11:59:43 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN .\Objects\12864.obj
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE 12864.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\12864.
                    -lst) TABS(2) OBJECT(.\Objects\12864.obj)

line level    source

   1          #include <12864.h>
   2           
   3          void Read_busy()
   4          {
   5   1        P0 = 0X00;
   6   1        DI = 0;
   7   1        RW = 1;
   8   1        EN = 1;
   9   1        while(P0 & 0x80)
  10   1        {}
  11   1        EN = 0;
  12   1      }
  13          
  14          void write_LCD_command(uint8 value) //写命令函数
  15          {
  16   1        Read_busy();
  17   1        DI = 0; //0:写指令
  18   1        RW = 0; //0:写操作
  19   1        LCD_databus = value;
  20   1        EN = 1; //EN下降沿锁存有效数据
  21   1        _nop_();
  22   1        _nop_();
  23   1        _nop_();//空指令，短暂延时
  24   1        EN = 0;
  25   1      }
  26          
  27          void write_LCD_data(uint8 value)  //写数据函数
  28          {
  29   1        Read_busy();
  30   1        DI = 1; //1:写数据
  31   1        RW = 0; //写操作
  32   1        LCD_databus = value;
  33   1        EN = 1; //EN下降沿锁存有效数据
  34   1        _nop_();
  35   1        _nop_();
  36   1        _nop_();//空指令，短暂延时
  37   1        EN = 0;
  38   1      }
  39          
  40          void Set_page(uint8 page) //设置显示起始页
  41          {
  42   1        page = 0xB8 | page; //页的首地址为0xB8
  43   1        write_LCD_command(page);
  44   1      }
  45          
  46          void Set_line(uint8 startline)  //设置显示起始行
  47          {
  48   1        startline = 0xC0 | startline;
  49   1        write_LCD_command(startline);
  50   1      }
  51          
  52          void Set_column(uint8 column) //设置显示的列
  53          {
  54   1        column = column & 0x3F; //列的最大值为64
C51 COMPILER V9.60.0.0   12864                                                             06/16/2022 11:59:43 PAGE 2   

  55   1        column = column | 0x40; //列的首地址为0x40
  56   1        write_LCD_command(column);
  57   1      } 
  58          
  59          void SetOnOff(uint8 onoff)  //显示开关函数，0x3E:关 0x3F:开
  60          {
  61   1        onoff = 0x3E | onoff; //onoff为0时关显示，为1时开显示
  62   1        write_LCD_command(onoff);
  63   1      }
  64          
  65          void SelectScreen(uint8 screen) //选择屏幕
  66          {
  67   1        switch(screen)
  68   1        {
  69   2          case 0:CS1 = 0;CS2 = 0;break;//全屏
  70   2          case 1:CS1 = 0;CS2 = 1;break;//左半屏
  71   2          case 2:CS1 = 1;CS2 = 0;break;//右半屏
  72   2          default:break;
  73   2        }
  74   1      }
  75          
  76          void ClearScreen(uint8 screen)  //清屏
  77          {
  78   1        uint8 i,j;
  79   1        SelectScreen(screen);
  80   1        for(i=0;i<8;i++)
  81   1        {
  82   2          Set_page(i);
  83   2          Set_column(0);
  84   2          for(j=0;j<64;j++)
  85   2          {
  86   3            write_LCD_data(0x00); //写入0，地址指针自动加1
  87   3          }
  88   2        }
  89   1      }
  90          
  91          void InitLCD()
  92          {
  93   1        Read_busy();
  94   1        SelectScreen(0);
  95   1        SetOnOff(0);
  96   1        SelectScreen(0);
  97   1        SetOnOff(1);
  98   1        SelectScreen(0);
  99   1        ClearScreen(0);
 100   1        Set_line(0);
 101   1      }
 102          
 103          void show_ch(uint8 screen,uint8 page,uint8 column,uint8 *p)
 104          {
 105   1        uint8 i;
 106   1        SelectScreen(screen);
 107   1        Set_page(page);
 108   1        Set_column(column);
 109   1        
 110   1        for(i=0;i<16;i++) //采用16*16的字模
 111   1        {
 112   2          write_LCD_data(p[i]);
 113   2        }
 114   1        
 115   1        Set_page(page+1);
 116   1        Set_column(column);
C51 COMPILER V9.60.0.0   12864                                                             06/16/2022 11:59:43 PAGE 3   

 117   1        for(i=0;i<16;i++) //采用16*16的字模,"小四号字"
 118   1        {
 119   2          write_LCD_data(p[i+16]);
 120   2        }
 121   1      }
 122          
 123          void show_im(uint8 screen,uint8 page,uint8 column,uint8 *p)
 124          {
 125   1        uint8 i;
 126   1        SelectScreen(screen);
 127   1        Set_page(page);
 128   1        Set_column(column);
 129   1      
 130   1        for(i=0;i<32;i++) //采用16*16的字模
 131   1        {
 132   2          write_LCD_data(p[i]);
 133   2        }
 134   1        
 135   1        Set_page(page+1);
 136   1        Set_column(column);
 137   1        for(i=0;i<32;i++) //采用16*16的字模,"小四号字"
 138   1        {
 139   2          write_LCD_data(p[i+32]);
 140   2        }
 141   1        
 142   1        Set_page(page+2);
 143   1        Set_column(column);
 144   1        for(i=0;i<32;i++) //采用16*16的字模,"小四号字"
 145   1        {
 146   2          write_LCD_data(p[i+64]);
 147   2        }
 148   1        
 149   1        Set_page(page+3);
 150   1        Set_column(column);
 151   1        for(i=0;i<32;i++) //采用16*16的字模,"小四号字"
 152   1        {
 153   2          write_LCD_data(p[i+96]);
 154   2        }
 155   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    413    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
